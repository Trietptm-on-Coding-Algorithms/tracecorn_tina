# srouce https://app.any.run

['/home/seth1002/project/tracecorn_tina/unitracer/lib/windows/dll']
ADVAPI32.dll is loaded @ 0x70000000
KERNEL32.dll is loaded @ 0x7009b000
GDI32.dll is loaded @ 0x7016f000
USER32.dll is loaded @ 0x701b6000
ntdll.dll is loaded @ 0x70246000
stack: 0x5ff00000-0x60000000
GetModuleHandleA(lpModuleName=0x00000000:"") = 0x00400000
Unhooked function: GetDC (0x00000001)
Unhooked function: VkKeyScanW (0x00000001)
Unhooked function: IsClipboardFormatAvailable (0x00000001)
Unhooked function: GetKeyboardType (0x00000001)
Unhooked function: GetWindowContextHelpId (0x00000001)
Unhooked function: DestroyCursor (0x00000001)
Unhooked function: GetSystemPaletteUse (0x00000001)
Unhooked function: IsIconic (0x00000001)
Unhooked function: VkKeyScanA (0x00000001)
Unhooked function: CreateSolidBrush (0x00000001)
Unhooked function: IsWindowEnabled (0x00000001)
Unhooked function: GetUserNameA (0x5fffff2c, 0x5fffff98)
Unhooked function: GetStockObject (0x000011ab)
# patch to bypass trash code -> 0x00401229: 	cmp	dword ptr [ebp - 4], 0x1b2e5
Unhooked function: GetTextAlign (0x00000000)
#Load Library:"ADVAPI32")
LoadLibraryA (lpFileName="ADVAPI32") = 70000000 => 0x00401046
GetProcAddress (hModule=0x70000000, lpProcName=0x00430290:"RegOpenKeyA") = 0x7002c41b => 0x0040104d
Unhooked function: LoadCursorW (0x00000000, 0x00000d05)
RegOpenKeyA (hKey=0x80000000, lpSubkey=00430220:"Interface\{aa5b6a80-b834-11d0-932f-00a0c90dcaa9}", pHandle=0x004312d0) = 0 => 00401083
#Load Library:"ADVAPI32")
LoadLibraryA (lpFileName="ADVAPI32") = 70000000 => 0x00401251
GetProcAddress (hModule=0x70000000, lpProcName=0x004302a8:"RegQueryValueExA") = 0x700ee5b3 => 0x00401258
Unhooked function: SetErrorMode (0x00000002)
#Load Library:"KERNEL32")
LoadLibraryA (lpFileName="KERNEL32") = 7009b000 => 0x004013e9
GetProcAddress (hModule=0x7009b000, lpProcName=0x004302c8:"GetModuleHandleA") = 0x700e7f41 => 0x004013f0
GetModuleHandleA(lpModuleName=0x00000000:"") = 0x00400000
RegQueryValueExA (hKey=0x00000000, lpValueName=0x004312cc:"", lpReserved=0x00000000, lpValueType=0x5ffffefc, lpBuffer=5ffffe30:"IActiveScriptParseProcedure32", lpBufSize=5ffffef8:29) = 0 => 00401452
VirtualAlloc (lpAddress=0x00000000, dwSize=0x00014800, flAllocationType=0x00003000, flProtect=0x00000040) = 0x00d50434 => 0x00401a17
# patch to bypass trash code -> 0x00d649e6: 	cmp	dword ptr [ebp - 0xc], 0x32dcd5
GetProcAddress (hModule=0x7009b000, lpProcName=0x5ffffe68:"LoadLibraryExA") = 0x700df7fa => 0x00d640ad
Unhooked function: LoadLibraryExA (0x5ffffe78, 0x00000000, 0x00000000)
GetProcAddress (hModule=0x00000000, lpProcName=0x00d50434:"99999934tfserdgfwGetProcAddress") = 0x00000000 => 0x00d640f4
GetProcAddress (hModule=0x00000000, lpProcName=0x00d50445:"GetProcAddress") = 0x700ee3d3 => 0x00d640f4
GetProcAddress (hModule=0x00000000, lpProcName=0x00d50456:"VirtualAlloc") = 0x700edfb6 => 0x00d640f4
GetProcAddress (hModule=0x00000000, lpProcName=0x00d50467:"LoadLibraryExA") = 0x700df7fa => 0x00d640f4
GetProcAddress (hModule=0x00000000, lpProcName=0x00d50478:"SetFilePointer") = 0x700e8b36 => 0x00d640f4
GetProcAddress (hModule=0x00000000, lpProcName=0x00d50489:"lstrlenA") = 0x700e5611 => 0x00d640f4
GetProcAddress (hModule=0x00000000, lpProcName=0x00d5049a:"lstrcatA") = 0x700e519f => 0x00d640f4
GetProcAddress (hModule=0x00000000, lpProcName=0x00d504ab:"VirtualProtect") = 0x700dd341 => 0x00d640f4
GetProcAddress (hModule=0x00000000, lpProcName=0x00d504bc:"UnmapViewOfFile") = 0x700e8b13 => 0x00d640f4
GetProcAddress (hModule=0x00000000, lpProcName=0x00d504cd:"GetModuleHandleA") = 0x700e7f41 => 0x00d640f4
GetProcAddress (hModule=0x00000000, lpProcName=0x00d504de:"WriteFile") = 0x700ec400 => 0x00d640f4
GetProcAddress (hModule=0x00000000, lpProcName=0x00d504ef:"CloseHandle") = 0x700e7a7c => 0x00d640f4
GetProcAddress (hModule=0x00000000, lpProcName=0x00d50500:"VirtualFree") = 0x700ecda4 => 0x00d640f4
GetProcAddress (hModule=0x00000000, lpProcName=0x00d50511:"GetTempPathA") = 0x70101a65 => 0x00d640f4
GetProcAddress (hModule=0x00000000, lpProcName=0x00d50522:"CreateFileA") = 0x700e7ee8 => 0x00d640f4
GetProcAddress (hModule=0x7009b000, lpProcName=0x5ffffe78:"VirtualAlloc") = 0x700edfb6 => 0x00d64160
VirtualAlloc (lpAddress=0x00000000, dwSize=0x00013880, flAllocationType=0x00003000, flProtect=0x00000040) = 0x00d64c34 => 0x00d64173
VirtualAlloc (lpAddress=0x00000000, dwSize=0x00016000, flAllocationType=0x00003000, flProtect=0x00000040) = 0x00d784b4 => 0x00d6469b
VirtualProtect (lpAddress=00001000, dwSize=0000cba8, flNewProtect=00d50564, lpflOldProtect=5ffffe64)
VirtualProtect (lpAddress=0000e000, dwSize=00000b2e, flNewProtect=00d50544, lpflOldProtect=5ffffe64)
VirtualProtect (lpAddress=0000f000, dwSize=00004034, flNewProtect=00d5054c, lpflOldProtect=5ffffe64)
VirtualProtect (lpAddress=00014000, dwSize=00000004, flNewProtect=00d50544, lpflOldProtect=5ffffe64)
VirtualProtect (lpAddress=00015000, dwSize=000003fc, flNewProtect=00d50544, lpflOldProtect=5ffffe64)
Unhooked function: LoadLibraryExA (0x00d86fd4, 0x00000000, 0x00000000)
GetProcAddress (hModule=0x00000000, lpProcName=0x00d86fba:"IsProcessorFeaturePresent") = 0x700f26b5 => 0x00d64487
Unhooked function: UnmapViewOfFile (0x00400000)
#Invalid memory mapping (UC_ERR_MAP)
VirtualAlloc (lpAddress=0x00400000, dwSize=0x00016000, flAllocationType=0x00003000, flProtect=0x00000040) = 0x00400000 => 0x00d647a8
ERROR: Invalid memory fetch (UC_ERR_FETCH_UNMAPPED)
-----------------------------------------------------
 eax: 0x00000000  ebx: 0xd22e2014  ecx: 0x00000000  edx: 0x00d50434 
 edi: 0x77dff00c  esi: 0x00d50000  esp: 0x5ffff19c  ebp: 0x5ffff3bc 
 eip: 0x00000000 
-----------------------------------------------------
2019-09-18 03:49:34.117178
2019-09-18 03:50:10.319449
emulation time: (36) sec
dump main process at: ./dump/pe.dump
dump all heaps at: ./dump/heap
extract ioc from:./dump/pe.dump
c2 list:
70.45.30.28:80
78.109.34.178:443
152.168.220.188:80
83.110.75.153:8090
190.146.81.138:8090
45.33.1.161:8080
192.163.221.191:8080
190.13.146.47:443
139.59.242.76:8080
203.150.19.63:443
190.104.64.197:443
190.171.105.158:7080
216.154.222.52:7080
190.55.86.138:8443
216.70.88.55:8080
178.249.187.150:7080
159.69.211.211:7080
190.55.39.215:80
201.113.23.175:443
46.32.229.152:8080
149.202.153.251:8080
83.169.33.157:8080
190.10.194.42:8080
200.82.147.93:7080
181.230.126.152:8090
108.179.216.46:8080
190.92.103.7:80
138.197.140.163:8080

rsa key:
30 68 02 61 00 ce 36 ea e3 75 d6 7d 8b 64 39 3f 26 24 bd dd 62 16 1b b7 c6 09 09 8f e2 1e 72 20 95 31 27 0a e3 c2 d1 95 7b 10 9e 94 3d 96 2a b0 f0 f6 c6 bf c4 ac 26 40 a9 37 6f 67 d4 87 09 c7 5e 3a 12 a5 1e e9 2d a0 e8 ee 91 1c 88 90 79 cb a8 63 6c fc ab 49 f2 f7 17 1b bb e0 cd 92 01 2d 00 ae 3d ee 01 02 03 01 00 01 
