['/home/seth1002/project/tracecorn_tina/unitracer/lib/windows/dll']
comdlg32.dll is loaded @ 0x70000000
OLEAUT32.dll is loaded @ 0x70049000
GDI32.dll is loaded @ 0x700d5000
SHELL32.dll is loaded @ 0x7011c000
KERNEL32.dll is loaded @ 0x70931000
WINSPOOL.DRV is loaded @ 0x70a05000
ADVAPI32.dll is loaded @ 0x70a2b000
ole32.dll is loaded @ 0x70ac6000
SHLWAPI.dll is loaded @ 0x70c03000
OLEACC.dll is loaded @ 0x70c79000
USER32.dll is loaded @ 0x70cb5000
COMCTL32.dll is loaded @ 0x70d45000
ntdll.dll is loaded @ 0x70ddc000
stack: 0x5ff00000-0x60000000
GetVersionExA(5ffffee4) = 1db10106 => 0040b870
GetModuleHandleA(lpModuleName=0x00000000:"") = 0x00400000
HeapCreate(0, 1000, 0) = d50924
GetModuleHandleA(lpModuleName=0x004531a4:"kernel32.dll") = 0x70931000
GetProcAddress (hModule=0x70931000, lpProcName=0x00456c18:"InitializeCriticalSectionAndSpinCount") = 0x70984939 => 0x00412f0d
InitializeCriticalSectionAndSpinCount(004659e8, 00000fa0) = 00000001 => 00412f2c
InitializeCriticalSectionAndSpinCount(00465a00, 00000fa0) = 00000001 => 00412f2c
InitializeCriticalSectionAndSpinCount(00465a18, 00000fa0) = 00000001 => 00412f2c
InitializeCriticalSectionAndSpinCount(00465a30, 00000fa0) = 00000001 => 00412f2c
InitializeCriticalSectionAndSpinCount(00465a48, 00000fa0) = 00000001 => 00412f2c
InitializeCriticalSectionAndSpinCount(00465a60, 00000fa0) = 00000001 => 00412f2c
InitializeCriticalSectionAndSpinCount(00465a78, 00000fa0) = 00000001 => 00412f2c
InitializeCriticalSectionAndSpinCount(00465a90, 00000fa0) = 00000001 => 00412f2c
InitializeCriticalSectionAndSpinCount(00465aa8, 00000fa0) = 00000001 => 00412f2c
InitializeCriticalSectionAndSpinCount(00465ac0, 00000fa0) = 00000001 => 00412f2c
InitializeCriticalSectionAndSpinCount(00465ad8, 00000fa0) = 00000001 => 00412f2c
InitializeCriticalSectionAndSpinCount(00465af0, 00000fa0) = 00000001 => 00412f2c
InitializeCriticalSectionAndSpinCount(00465b08, 00000fa0) = 00000001 => 00412f2c
InitializeCriticalSectionAndSpinCount(00465b20, 00000fa0) = 00000001 => 00412f2c
TlsAlloc() = 0 => 0x0040e77f
HeapAlloc(00d50924, 00000008, 00000088) = 0x00d51924 => 0x0040cec4
TlsSetValue(dwTlsIndex = 0, lpTlsValue = 00d51924) => 0x0040e7b3
GetCurrentThreadId() = 6674
HeapAlloc(00d50924, 00000000, 00000480) = 0x00d519ac => 0x00409f34
Unhooked function: GetStartupInfoA (0x5ffffe9c)
Unhooked function: GetStdHandle (0xfffffff6)
Unhooked function: GetFileType (0x00000000)
Unhooked function: GetStdHandle (0xfffffff5)
Unhooked function: GetFileType (0x00000000)
Unhooked function: GetStdHandle (0xfffffff4)
Unhooked function: GetFileType (0x00000000)
Unhooked function: SetHandleCount (0x00000020)
GetCommandLineA() = 0x0001b000:C:\Users\admin\AppData\Local\easywindow\easywindow.exe => 0x0040b955
GetEnvironmentStringsW() = 0x0001c000:ALLUSERSPROFILE=C:\Documents and Settings\All Use => 0x00411591
HeapAlloc(00d50924, 00000000, 00000035) = 0x00d51e2c => 0x00409f34
FreeEnvironmentStringsW(0x0001c000) = 0x00000001 => 0x0041163a
Unhooked function: EnterCriticalSection (0x00465ac0)
GetACP() = 0x000003a8 => 0x0040c720
HeapAlloc(00d50924, 00000000, 00000220) = 0x00d51e61 => 0x00409f34
GetCPInfo(0x000003a8, 0x5ffffe34) = 0x00000001 => 0x0040c35c
GetStringTypeW(0x00000001, 0x00456b7c, 0x00000001, 0x5ffff8f0) = 0x00000001 => 0x00412972
Unhooked function: MultiByteToWideChar (0x000003a8, 0x00000001, 0x5ffffd34, 0x00000100, 0x00000000, 0x00000000)
LCMapStringW(0x00000000, 0x00000100, 0x00456b7c, 0x00000001) = 0x00000001 => 0x004125b9
Unhooked function: MultiByteToWideChar (0x000003a8, 0x00000001, 0x5ffffd34, 0x00000100, 0x00000000, 0x00000000)
Unhooked function: MultiByteToWideChar (0x000003a8, 0x00000001, 0x5ffffd34, 0x00000100, 0x00000000, 0x00000000)
Unhooked function: LeaveCriticalSection (0x00465ac0)
GetModuleFileNameA(0x00000000, lpString=0x00465c30 -> "C:\Users\admin\AppData\Local\easywindow\easywindow.exe", 0x00000104) = 00000036 => 0x00411501
HeapAlloc(00d50924, 00000000, 0000003f) = 0x00d52081 => 0x00409f34
HeapAlloc(00d50924, 00000000, 00000008) = 0x00d520c0 => 0x00409f34
HeapAlloc(00d50924, 00000000, 00000034) = 0x00d520c8 => 0x00409f34
Unhooked function: HeapFree (0x00d50924, 0x00000000, 0x00d51e2c)
GetModuleHandleA(lpModuleName=0x00452110:"KERNEL32.DLL") = 0x70931000
GetProcAddress (hModule=0x70931000, lpProcName=0x00456798:"IsProcessorFeaturePresent") = 0x709886b5 => 0x004102a2
Unhooked function: IsProcessorFeaturePresent (0x00000000)
HeapAlloc(00d50924, 00000000, 00000080) = 0x00d520fc => 0x00409f34
HeapAlloc(00d50924, 00000008, 00000800) = 0x00d5217c => 0x0040cec4
Unhooked function: SetUnhandledExceptionFilter (0x00410468)
Unhooked function: EnterCriticalSection (0x00465a78)
HeapSize(00d50924, 00000000, 00d520fc) = 0x00000080 => 0x0040cba4
Unhooked function: LeaveCriticalSection (0x00465a78)
Unhooked function: GetSystemTimeAsFileTime (0x5ffffec8)
GetCurrentProcessId() = 758
GetCurrentThreadId() = 6674
GetTickCount() = 6261630 => 0x0040cf4e
Unhooked function: QueryPerformanceCounter (0x5ffffec0)
Unhooked function: EnterCriticalSection (0x00465a78)
HeapSize(00d50924, 00000000, 00d520fc) = 0x00000080 => 0x0040cba4
Unhooked function: LeaveCriticalSection (0x00465a78)
Unhooked function: EnterCriticalSection (0x00465a78)
HeapSize(00d50924, 00000000, 00d520fc) = 0x00000080 => 0x0040cba4
Unhooked function: LeaveCriticalSection (0x00465a78)
Unhooked function: InterlockedIncrement (0x00462f48)
Unhooked function: InitializeCriticalSection (0x00465ee8)
Unhooked function: InitializeCriticalSection (0x00465f00)
Unhooked function: InitializeCriticalSection (0x00465f18)
Unhooked function: InitializeCriticalSection (0x00465f30)
Unhooked function: EnterCriticalSection (0x00465a78)
HeapSize(00d50924, 00000000, 00d520fc) = 0x00000080 => 0x0040cba4
Unhooked function: LeaveCriticalSection (0x00465a78)
HeapAlloc(00d50924, 00000000, 00000018) = 0x00d5297c => 0x00409f34
Unhooked function: InitializeCriticalSection (0x00d5297c)
HeapAlloc(00d50924, 00000000, 00000004) = 0x00d52994 => 0x00409f34
Unhooked function: EnterCriticalSection (0x00465ee8)
HeapAlloc(00d50924, 00000000, 00000034) = 0x00d52998 => 0x00409f34
Unhooked function: EnterCriticalSection (0x00465ee8)
Unhooked function: LeaveCriticalSection (0x00465ee8)
Unhooked function: LeaveCriticalSection (0x00465ee8)
Unhooked function: EnterCriticalSection (0x00465ee8)
Unhooked function: LeaveCriticalSection (0x00465ee8)
Unhooked function: EnterCriticalSection (0x00465ee8)
Unhooked function: LeaveCriticalSection (0x00465ee8)
Unhooked function: EnterCriticalSection (0x00465a78)
HeapSize(00d50924, 00000000, 00d520fc) = 0x00000080 => 0x0040cba4
Unhooked function: LeaveCriticalSection (0x00465a78)
HeapAlloc(00d50924, 00000000, 00000004) = 0x00d529cc => 0x00409f34
Unhooked function: EnterCriticalSection (0x00465ee8)
Unhooked function: LeaveCriticalSection (0x00465ee8)
Unhooked function: EnterCriticalSection (0x00465a78)
HeapSize(00d50924, 00000000, 00d520fc) = 0x00000080 => 0x0040cba4
Unhooked function: LeaveCriticalSection (0x00465a78)
Unhooked function: InterlockedIncrement (0x00462f48)
Unhooked function: InitializeCriticalSection (0x00465ee8)
Unhooked function: InitializeCriticalSection (0x00465f00)
Unhooked function: InitializeCriticalSection (0x00465f18)
Unhooked function: InitializeCriticalSection (0x00465f30)
Unhooked function: EnterCriticalSection (0x00465a78)
HeapSize(00d50924, 00000000, 00d520fc) = 0x00000080 => 0x0040cba4
Unhooked function: LeaveCriticalSection (0x00465a78)
Unhooked function: EnterCriticalSection (0x00465a78)
HeapSize(00d50924, 00000000, 00d520fc) = 0x00000080 => 0x0040cba4
Unhooked function: LeaveCriticalSection (0x00465a78)
Unhooked function: EnterCriticalSection (0x00465a78)
HeapSize(00d50924, 00000000, 00d520fc) = 0x00000080 => 0x0040cba4
Unhooked function: LeaveCriticalSection (0x00465a78)
GetVersionExA(5ffffe34) = 1db10106 => 0042a4c0
Unhooked function: InitializeCriticalSection (0x00466114)
Unhooked function: EnterCriticalSection (0x00465a78)
HeapSize(00d50924, 00000000, 00d520fc) = 0x00000080 => 0x0040cba4
Unhooked function: LeaveCriticalSection (0x00465a78)
TlsAlloc() = 1 => 0x004466f0
Unhooked function: InitializeCriticalSection (0x0046570c)
Unhooked function: EnterCriticalSection (0x0046570c)
GlobalAlloc(00000002, 00000100) = 0x00d529d0 => 0x0044650b
GlobalLock(00d529d0) = 0x00d529d0 => 0x00446563
Unhooked function: LeaveCriticalSection (0x0046570c)
TlsGetValue(dwTlsIndex = 1) = 00000000) => 0x004465b9
LocalAlloc(00000040, 00000104) = 0x00d52ad0 => 0x00446483
TlsGetValue(dwTlsIndex = 1) = 00000000) => 0x00446771
LocalAlloc(00000040, 00000010) = 0x00d52bd4 => 0x00446483
Unhooked function: EnterCriticalSection (0x0046570c)
Unhooked function: LeaveCriticalSection (0x0046570c)
LocalAlloc(00000000, 00000008) = 0x00d52be4 => 0x004467e4
TlsSetValue(dwTlsIndex = 1, lpTlsValue = 00d52bd4) => 0x0044682d
Unhooked function: InitializeCriticalSection (0x0046576c)
Unhooked function: EnterCriticalSection (0x0046576c)
Unhooked function: InitializeCriticalSection (0x00465908)
Unhooked function: LeaveCriticalSection (0x0046576c)
Unhooked function: EnterCriticalSection (0x00465908)
LocalAlloc(00000040, 00001074) = 0x00d52bec => 0x00446483
Unhooked function: LeaveCriticalSection (0x00465908)
Unhooked function: EnterCriticalSection (0x00465ac0)
GetACP() = 0x000003a8 => 0x0040c720
Unhooked function: LeaveCriticalSection (0x00465ac0)
Unhooked function: EnterCriticalSection (0x00465a78)
HeapSize(00d50924, 00000000, 00d520fc) = 0x00000080 => 0x0040cba4
Unhooked function: LeaveCriticalSection (0x00465a78)
TlsGetValue(dwTlsIndex = 1) = 00d52bd4) => 0x004465b9
Unhooked function: GetCursorPos (0x00d52b1c)
TlsGetValue(dwTlsIndex = 1) = 00d52bd4) => 0x004465b9
Unhooked function: EnterCriticalSection (0x0046570c)
Unhooked function: LeaveCriticalSection (0x0046570c)
TlsGetValue(dwTlsIndex = 1) = 00d52bd4) => 0x004465b9
LocalAlloc(00000040, 00000080) = 0x00d53c60 => 0x00446483
TlsGetValue(dwTlsIndex = 1) = 00d52bd4) => 0x00446771
LocalReAlloc(0x00d52be4, 0x0000000c, 0x00000002) = 0x00d53ce0 => 0x004467f6
TlsSetValue(dwTlsIndex = 1, lpTlsValue = 00d52bd4) => 0x0044682d
Unhooked function: GetCurrentThread ()
GetCurrentThreadId() = 6674
Unhooked function: EnterCriticalSection (0x00465a78)
HeapSize(00d50924, 00000000, 00d520fc) = 0x00000080 => 0x0040cba4
Unhooked function: LeaveCriticalSection (0x00465a78)
Unhooked function: EnterCriticalSection (0x00465a78)
HeapSize(00d50924, 00000000, 00d520fc) = 0x00000080 => 0x0040cba4
Unhooked function: LeaveCriticalSection (0x00465a78)
Unhooked function: RegisterWindowMessageA (0x00451954)
Unhooked function: EnterCriticalSection (0x00465a78)
HeapSize(00d50924, 00000000, 00d520fc) = 0x00000080 => 0x0040cba4
Unhooked function: LeaveCriticalSection (0x00465a78)
Unhooked function: EnterCriticalSection (0x00465a78)
HeapSize(00d50924, 00000000, 00d520fc) = 0x00000080 => 0x0040cba4
Unhooked function: LeaveCriticalSection (0x00465a78)
Unhooked function: EnterCriticalSection (0x00465a78)
HeapSize(00d50924, 00000000, 00d520fc) = 0x00000080 => 0x0040cba4
Unhooked function: LeaveCriticalSection (0x00465a78)
Unhooked function: EnterCriticalSection (0x00465a78)
HeapSize(00d50924, 00000000, 00d520fc) = 0x00000080 => 0x0040cba4
Unhooked function: LeaveCriticalSection (0x00465a78)
Unhooked function: EnterCriticalSection (0x00465a78)
HeapSize(00d50924, 00000000, 00d520fc) = 0x00000080 => 0x0040cba4
Unhooked function: LeaveCriticalSection (0x00465a78)
Unhooked function: EnterCriticalSection (0x00465a78)
HeapSize(00d50924, 00000000, 00d520fc) = 0x00000080 => 0x0040cba4
Unhooked function: LeaveCriticalSection (0x00465a78)
Unhooked function: EnterCriticalSection (0x00465a78)
HeapSize(00d50924, 00000000, 00d520fc) = 0x00000080 => 0x0040cba4
Unhooked function: LeaveCriticalSection (0x00465a78)
Unhooked function: EnterCriticalSection (0x00465a78)
HeapSize(00d50924, 00000000, 00d520fc) = 0x00000080 => 0x0040cba4
Unhooked function: LeaveCriticalSection (0x00465a78)
GetVersion()
GetVersion()
GetVersion()
GetVersion()
Unhooked function: GetSystemMetrics (0x0000000b)
Unhooked function: GetSystemMetrics (0x0000000c)
Unhooked function: GetSystemMetrics (0x00000002)
Unhooked function: GetSystemMetrics (0x00000003)
Unhooked function: GetDC (0x00000000)
Unhooked function: GetDeviceCaps (0x00000000, 0x00000058)
Unhooked function: GetDeviceCaps (0x00000000, 0x0000005a)
Unhooked function: ReleaseDC (0x00000000, 0x00000000)
Unhooked function: GetSysColor (0x0000000f)
Unhooked function: GetSysColor (0x00000010)
Unhooked function: GetSysColor (0x00000014)
Unhooked function: GetSysColor (0x00000012)
Unhooked function: GetSysColor (0x00000006)
Unhooked function: GetSysColorBrush (0x0000000f)
Unhooked function: GetSysColorBrush (0x00000006)
Unhooked function: LoadCursorA (0x00000000, 0x00007f02)
Unhooked function: LoadCursorA (0x00000000, 0x00007f00)
Unhooked function: EnterCriticalSection (0x00465a78)
HeapSize(00d50924, 00000000, 00d520fc) = 0x00000080 => 0x0040cba4
Unhooked function: LeaveCriticalSection (0x00465a78)
Unhooked function: GetOEMCP ()
GetCPInfo(0x00000000, 0x5ffffeb4) = 0x00000001 => 0x00446bb5
Unhooked function: RegisterWindowMessageA (0x004557d4)
Unhooked function: RegisterWindowMessageA (0x004558c0)
Unhooked function: RegisterWindowMessageA (0x004558b4)
Unhooked function: RegisterWindowMessageA (0x004558a8)
Unhooked function: RegisterWindowMessageA (0x00455898)
Unhooked function: RegisterWindowMessageA (0x00455888)
Unhooked function: RegisterWindowMessageA (0x0045587c)
Unhooked function: RegisterWindowMessageA (0x00455868)
Unhooked function: RegisterWindowMessageA (0x00455850)
Unhooked function: RegisterWindowMessageA (0x00455844)
Unhooked function: RegisterWindowMessageA (0x00455838)
Unhooked function: RegisterWindowMessageA (0x00455824)
Unhooked function: RegisterWindowMessageA (0x00455808)
Unhooked function: InterlockedIncrement (0x00462f48)
Unhooked function: InitializeCriticalSection (0x00465ee8)
Unhooked function: InitializeCriticalSection (0x00465f00)
Unhooked function: InitializeCriticalSection (0x00465f18)
Unhooked function: InitializeCriticalSection (0x00465f30)
Unhooked function: EnterCriticalSection (0x00465a78)
HeapSize(00d50924, 00000000, 00d520fc) = 0x00000080 => 0x0040cba4
Unhooked function: LeaveCriticalSection (0x00465a78)
Unhooked function: EnterCriticalSection (0x00465a78)
HeapSize(00d50924, 00000000, 00d520fc) = 0x00000080 => 0x0040cba4
Unhooked function: LeaveCriticalSection (0x00465a78)
Unhooked function: GetStartupInfoA (0x5fffff90)
GetModuleHandleA(lpModuleName=0x00000000:"") = 0x00400000
TlsGetValue(dwTlsIndex = 1) = 00d52bd4) => 0x004465b9
TlsGetValue(dwTlsIndex = 1) = 00d52bd4) => 0x004465b9
TlsGetValue(dwTlsIndex = 1) = 00d52bd4) => 0x004465b9
Unhooked function: SetErrorMode (0x00000000)
Unhooked function: SetErrorMode (0x00008001)
TlsGetValue(dwTlsIndex = 1) = 00d52bd4) => 0x004465b9
TlsGetValue(dwTlsIndex = 1) = 00d52bd4) => 0x004465b9
TlsGetValue(dwTlsIndex = 1) = 00d52bd4) => 0x004465b9
GetModuleFileNameA(0x00400000, lpString=0x5ffffc94 -> "C:\Users\admin\AppData\Local\easywindow\easywindow.exe", 0x00000104) = 00000036 => 0x004473cc
PathFindExtensionA(0x5ffffc94 -> "C:\Users\admin\AppData\Local\easywindow\easywindow.exe") = 0x5ffffcc6 => 0x004473d9
PathFindFileNameA(0x5ffffc94 -> "C:\Users\admin\AppData\Local\easywindow\easywindow") = 0x5ffffcbc => 0x00447365
lstrcpyn (0x5ffffd98, 0x5ffffcbc -> "easywindow", 0x00000104) = 0x5ffffd98 -> "easywindow" => 0x00447385
HeapAlloc(00d50924, 00000000, 0000000b) = 0x00d53cf4 => 0x00409f34
TlsGetValue(dwTlsIndex = 1) = 00d52bd4) => 0x004465b9
FindResourceA(0x00400000, 0x00000e01, 0x00000006) = 0x00000001 => 0x00409034
LoadResourceA(0x00400000, 0x00000001) = 0x00d53cff => 0x00402cd4
LockResourceA(0x00d53cff) = 0x00d53cff => 0x00402cee
SizeofResourceA(0x00400000, 0x00000001) = 0x00000050 => 0x00402d09
HeapAlloc(00d50924, 00000000, 00000014) = 0x00d53d4f => 0x00409f34
lstrcpy (0x5ffffcc6, 0x00454b34 -> ".HLP") = 0x5ffffcc6 -> ".HLP" => 0x00447464
HeapAlloc(00d50924, 00000000, 00000037) = 0x00d53d63 => 0x00409f34
lstrcat (0x5ffffd98 -> "easywindow", 0x00454b2c -> ".INI") = 0x5ffffd98 -> "easywindow.INI@" => 0x00447491
HeapAlloc(00d50924, 00000000, 00000010) = 0x00d53d9a => 0x00409f34
TlsGetValue(dwTlsIndex = 1) = 00d52bd4) => 0x004465b9
TlsGetValue(dwTlsIndex = 1) = 00d52bd4) => 0x004465b9
TlsGetValue(dwTlsIndex = 1) = 00d52bd4) => 0x004465b9
GetCurrentThreadId() = 6674
Unhooked function: SetWindowsHookExA (0xffffffff, 0x00432643, 0x00000000, 0x00001a12)
GetModuleHandleA(lpModuleName=0x00454b54:"user32.dll") = 0x70cb5000
GetProcAddress (hModule=0x70cb5000, lpProcName=0x00454b44:"NotifyWinEvent") = 0x70cc0ff3 => 0x00447523
Unhooked function: RegOpenKeyExA (0x80000001, 0x004532b8, 0x00000000, 0x00000001, 0x5ffffeb0)
RegQueryValueExA (hKey=0x00000000, lpValueName=0x004532b0:"NoRun", lpReserved=0x00000000, lpValueType=0x5ffffea8, lpBuffer=5ffffeac:"", lpBufSize=5ffffea0:0) = 0 => 00444a5f
RegQueryValueExA (hKey=0x00000000, lpValueName=0x004532a4:"NoDrives", lpReserved=0x00000000, lpValueType=0x5ffffea8, lpBuffer=5ffffeac:"", lpBufSize=5ffffea0:0) = 0 => 00444a5f
RegQueryValueExA (hKey=0x00000000, lpValueName=0x00453298:"RestrictRun", lpReserved=0x00000000, lpValueType=0x5ffffea8, lpBuffer=5ffffeac:"", lpBufSize=5ffffea0:0) = 0 => 00444a5f
RegQueryValueExA (hKey=0x00000000, lpValueName=0x00453280:"NoNetConnectDisconnect", lpReserved=0x00000000, lpValueType=0x5ffffea8, lpBuffer=5ffffeac:"", lpBufSize=5ffffea0:0) = 0 => 00444a5f
RegQueryValueExA (hKey=0x00000000, lpValueName=0x0045326c:"NoRecentDocsHistory", lpReserved=0x00000000, lpValueType=0x5ffffea8, lpBuffer=5ffffeac:"", lpBufSize=5ffffea0:0) = 0 => 00444a5f
RegQueryValueExA (hKey=0x00000000, lpValueName=0x00453264:"NoClose", lpReserved=0x00000000, lpValueType=0x5ffffea8, lpBuffer=5ffffeac:"", lpBufSize=5ffffea0:0) = 0 => 00444a5f
RegCloseKey (hKey=0x0)
Unhooked function: RegOpenKeyExA (0x80000001, 0x00453228, 0x00000000, 0x00000001, 0x5ffffeb0)
RegQueryValueExA (hKey=0x00000000, lpValueName=0x00453218:"NoEntireNetwork", lpReserved=0x00000000, lpValueType=0x5ffffea8, lpBuffer=5ffffeac:"", lpBufSize=5ffffea0:0) = 0 => 00444a5f
RegCloseKey (hKey=0x0)
Unhooked function: RegOpenKeyExA (0x80000001, 0x004531dc, 0x00000000, 0x00000001, 0x5ffffeb0)
RegQueryValueExA (hKey=0x00000000, lpValueName=0x004531d0:"NoPlacesBar", lpReserved=0x00000000, lpValueType=0x5ffffea8, lpBuffer=5ffffeac:"", lpBufSize=5ffffea0:0) = 0 => 00444a5f
RegQueryValueExA (hKey=0x00000000, lpValueName=0x004531c0:"NoBackButton", lpReserved=0x00000000, lpValueType=0x5ffffea8, lpBuffer=5ffffeac:"", lpBufSize=5ffffea0:0) = 0 => 00444a5f
RegQueryValueExA (hKey=0x00000000, lpValueName=0x004531b4:"NoFileMru", lpReserved=0x00000000, lpValueType=0x5ffffea8, lpBuffer=5ffffeac:"", lpBufSize=5ffffea0:0) = 0 => 00444a5f
RegCloseKey (hKey=0x0)
RegCloseKey (hKey=0x0)
Unhooked function: EnterCriticalSection (0x00d5297c)
Unhooked function: GetLastError ()
TlsGetValue(dwTlsIndex = 0) = 00d51924) => 0x0040e715
Unhooked function: SetLastError (0x00000000)
Unhooked function: LeaveCriticalSection (0x00d5297c)
Unhooked function: EnterCriticalSection (0x00d5297c)
Unhooked function: EnterCriticalSection (0x00465b08)
HeapAlloc(00d50924, 00000000, 00001000) = 0x00d53daa => 0x00409f34
Unhooked function: LeaveCriticalSection (0x00465b08)
Unhooked function: GetLastError ()
TlsGetValue(dwTlsIndex = 0) = 00d51924) => 0x0040e715
Unhooked function: SetLastError (0x00000000)
Unhooked function: LeaveCriticalSection (0x00d5297c)
Unhooked function: EnterCriticalSection (0x00465b08)
Unhooked function: GetLastError ()
TlsGetValue(dwTlsIndex = 0) = 00d51924) => 0x0040e715
Unhooked function: SetLastError (0x00000000)
Unhooked function: GetLastError ()
TlsGetValue(dwTlsIndex = 0) = 00d51924) => 0x0040e715
Unhooked function: SetLastError (0x00000000)
Unhooked function: LeaveCriticalSection (0x00465b08)
# Load Library:"KERNEL32.DLL")
LoadLibraryExW (lpLibFileName=0045044c -> "KERNEL32.DLL") = 70931000 => 0x00403d4d
GetProcAddress (hModule=0x70931000, lpProcName=0x00450468:"FindResourceA") = 0x7097b05b => 0x00403d51
# Load Library:"KERNEL32.DLL")
LoadLibraryExW (lpLibFileName=0045044c -> "KERNEL32.DLL") = 70931000 => 0x00403d4d
GetProcAddress (hModule=0x70931000, lpProcName=0x0045043c:"LoadResource") = 0x7097a84d => 0x00403d51
# Load Library:"KERNEL32.DLL")
LoadLibraryExW (lpLibFileName=0045044c -> "KERNEL32.DLL") = 70931000 => 0x00403d4d
GetProcAddress (hModule=0x70931000, lpProcName=0x0045042c:"SizeofResource") = 0x70974e7f => 0x00403d51
# Load Library:"KERNEL32.DLL")
LoadLibraryExW (lpLibFileName=0045044c -> "KERNEL32.DLL") = 70931000 => 0x00403d4d
GetProcAddress (hModule=0x70931000, lpProcName=0x0045041c:"LockResource") = 0x70970d29 => 0x00403d51
FindResourceA(0x00000000, 0x0000014c, 0x0000000a) = 0x00000002 => 0x0040416f
LoadResourceA(0x00000000, 0x00000002) = 0x00d54daa => 0x0040417b
SizeofResourceA(0x00000000, 0x00000002) = 0x00014144 => 0x00404187
LockResourceA(0x00d54daa) = 0x00d54daa => 0x00404191
HeapAlloc(00d50924, 00000000, 00014144) = 0x00d68eee => 0x00409f34
HeapAlloc(00d50924, 00000000, 00000770) = 0x00d7d032 => 0x00409f34
HeapAlloc(00d50924, 00000000, 00000770) = 0x00d7d7a2 => 0x00409f34
HeapAlloc(00d50924, 00000000, 00000ed0) = 0x00d7df12 => 0x00409f34
Unhooked function: HeapFree (0x00d50924, 0x00000000, 0x00d7d7a2)
HeapAlloc(00d50924, 00000000, 00000ed0) = 0x00d7ede2 => 0x00409f34
Unhooked function: HeapFree (0x00d50924, 0x00000000, 0x00d7df12)
HeapAlloc(00d50924, 00000000, 00000ed0) = 0x00d7fcb2 => 0x00409f34
Unhooked function: HeapFree (0x00d50924, 0x00000000, 0x00d7d032)
Unhooked function: HeapFree (0x00d50924, 0x00000000, 0x00d7ede2)
HeapAlloc(00d50924, 00000000, 00000ed0) = 0x00d80b82 => 0x00409f34
HeapAlloc(00d50924, 00000000, 000013f0) = 0x00d81a52 => 0x00409f34
Unhooked function: HeapFree (0x00d50924, 0x00000000, 0x00d80b82)
HeapAlloc(00d50924, 00000000, 000013f0) = 0x00d82e42 => 0x00409f34
Unhooked function: HeapFree (0x00d50924, 0x00000000, 0x00d81a52)
HeapAlloc(00d50924, 00000000, 000013f0) = 0x00d84232 => 0x00409f34
Unhooked function: HeapFree (0x00d50924, 0x00000000, 0x00d7fcb2)
Unhooked function: HeapFree (0x00d50924, 0x00000000, 0x00d82e42)
# Load Library:"CRYPT32.DLL")
CRYPT32.DLL is loaded @ 0x70f18000
LoadLibraryExW (lpLibFileName=0044eea0 -> "CRYPT32.DLL") = 70f18000 => 0x00403d4d
GetProcAddress (hModule=0x70f18000, lpProcName=0x0044eeb8:"CryptStringToBinaryA") = 0x70f4dd77 => 0x00403d51
CryptStringToBinaryA(0x00d84232 -> "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", 0x000013ec, 0x00000001, 0x00000000, 0x5ffffe94, 0x00000000, 0x00000000) = 0x00000001 => 0x00403dad
HeapAlloc(00d50924, 00000000, 00000ef1) = 0x00d85622 => 0x00409f34
CryptStringToBinaryA(0x00d84232 -> "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", 0x000013ec, 0x00000001, 0x00d85622, 0x5ffffe94, 0x00000000, 0x00000000) = 0x00000001 => 0x00403e0b
# Load Library:"ADVAPI32.DLL")
LoadLibraryExW (lpLibFileName=0044eed0 -> "ADVAPI32.DLL") = 70a2b000 => 0x00403d4d
GetProcAddress (hModule=0x70a2b000, lpProcName=0x0044eeec:"CryptAcquireContextA") = 0x70a42f96 => 0x00403d51
Unhooked function: CryptAcquireContextA (0x5ffffd5c, 0x00000000, 0x00000000, 0x00000001, 0x00000000)
# Load Library:"KERNEL32.DLL")
LoadLibraryExW (lpLibFileName=0045044c -> "KERNEL32.DLL") = 70931000 => 0x00403d4d
GetProcAddress (hModule=0x70931000, lpProcName=0x0044efc0:"VirtualAlloc") = 0x70983fb6 => 0x00403d51
VirtualAlloc (lpAddress=0x00000000, dwSize=0x00014144, flAllocationType=0x00001000, flProtect=0x00000040) = 0x00d86513 => 0x00404358
VirtualAlloc (lpAddress=0x00000000, dwSize=0x00000ef0, flAllocationType=0x00001000, flProtect=0x00000040) = 0x00d9a657 => 0x0040437f
# Load Library:"ADVAPI32.DLL")
LoadLibraryA (lpFileName="ADVAPI32.DLL") = 70a2b000 => 0x00d9a8bf
GetProcAddress (hModule=0x70a2b000, lpProcName=0x5ffffb44:"CryptAcquireContextA") = 0x70a42f96 => 0x00d9a8d0
GetProcAddress (hModule=0x70a2b000, lpProcName=0x5ffffcc8:"CryptImportKey") = 0x70a45879 => 0x00d9a8e1
GetProcAddress (hModule=0x70a2b000, lpProcName=0x5ffffca0:"CryptEncrypt") = 0x70a4c558 => 0x00d9a8f2
Unhooked function: CryptAcquireContextA (0x5ffffcb0, 0x00000000, 0x00000000, 0x00000001, 0x00000000)
Unhooked function: CryptAcquireContextA (0x5ffffcb0, 0x00000000, 0x00000000, 0x00000001, 0x00000008)
Unhooked function: CryptAcquireContextA (0x5ffffcb0, 0x00000000, 0x00000000, 0x00000001, 0xf0000000)
# Load Library:"ADVAPI32.DLL")
LoadLibraryA (lpFileName="ADVAPI32.DLL") = 70a2b000 => 0x00d9a8bf
GetProcAddress (hModule=0x70a2b000, lpProcName=0x5ffffb44:"CryptAcquireContextA") = 0x70a42f96 => 0x00d9a8d0
GetProcAddress (hModule=0x70a2b000, lpProcName=0x5ffffcc8:"CryptImportKey") = 0x70a45879 => 0x00d9a8e1
GetProcAddress (hModule=0x70a2b000, lpProcName=0x5ffffca0:"CryptEncrypt") = 0x70a4c558 => 0x00d9a8f2
Unhooked function: CryptAcquireContextA (0x5ffffcb0, 0x00000000, 0x00000000, 0x00000001, 0x00000000)
Unhooked function: CryptAcquireContextA (0x5ffffcb0, 0x00000000, 0x00000000, 0x00000001, 0x00000008)
Unhooked function: CryptAcquireContextA (0x5ffffcb0, 0x00000000, 0x00000000, 0x00000001, 0xf0000000)
ERROR: Invalid memory read (UC_ERR_READ_UNMAPPED)
-----------------------------------------------------
 eax: 0x00000000  ebx: 0xffffffff  ecx: 0x00d86513  edx: 0x5ffffcb0 
 edi: 0x004639c8  esi: 0x004639c8  esp: 0x5ffffd68  ebp: 0x5ffffebc 
 eip: 0x00d86513 
-----------------------------------------------------
2019-09-20 10:11:40.728653
2019-09-20 10:12:50.490494
emulation time: (69) sec
dump main process at: ./dump/pe.dump
dump all heaps at: ./dump/heap

-----------------------------
extract ioc from:./dump/pe.dump
